[{"categories":null,"content":"简介 Latex是一个基于TEX的排班系统。粘贴复制的话就不搞了。简而言之，通俗来说，就是用来写文章的，而且完全不需要你去花时间去自己考虑排版、页码等没必要花时间去弄的玩意。而且，对于数学公式的输入也是极为方便，这点在后面会展示。 安装 安装发行版 sudo apt-get install texlive-full 安装XeLaTeX编译引擎sudo apt-get install texlive-xetex 安装中文支持包（如果需要）sudo apt-get install texlive-lang-chinese 安装编辑器（图形化界面的选择有很多，例如 TeXStudio，TeXmaker等，可以看做是一个编辑器，这里安装的是TexStudio）sudo apt-get install texstudio 配置 设置编译器为XeLaTeX，TeXstudio中在Options-\u003eConfigure TeXstudio-\u003eBuild-\u003eDefault Compiler中更改默认编译器为XeLaTeX 更改软件界面语言，将Options-\u003eConfigure TeXstudio-\u003eGeneral-\u003eLanguage改为zh-CN即可将界面设置为中文 其他工具和资源 ","date":"2022-06-30","objectID":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/:0:0","tags":null,"title":"Ubuntu20.04安装LaTeX并配置中文环境","uri":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/"},{"categories":null,"content":"Mathpix 在写论文或者文档的时候，经常会碰到要输入数学公式的情况。如果去手敲，效率很低。这里介绍一个数学公式的latex语句生成工具 Mathpix。 碰到文献里的数学公式，只需要用这个软件，就可以轻松获得这个公式的latex语句。 ","date":"2022-06-30","objectID":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/:1:0","tags":null,"title":"Ubuntu20.04安装LaTeX并配置中文环境","uri":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/"},{"categories":null,"content":"模板 模板这里分享一个latex模板网站 模板 ","date":"2022-06-30","objectID":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/:2:0","tags":null,"title":"Ubuntu20.04安装LaTeX并配置中文环境","uri":"/ubuntu20.04%E5%AE%89%E8%A3%85latex%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/"},{"categories":null,"content":"APT软件包管理系统 apt-get install apt一般直接安装已经编译好的可执行文件，会直接帮你处理依赖关系，apt-get install安装目录是包的维护者确定的，不是用户。系统安装软件一般在/usr/share，可执行的文件在/usr/bin，配置文件可能安装到了/etc下等。 apt-get remove 卸载已安装的软件包（保留配置文件） apt-get remove -purge 卸载已安装的软件包同时删除配置文件 apt-get autoremove 删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包(新手注意在桌面版的Ubuntu系统下尽量不要使用) apt-get update 更新软件信息数据库 apt-get upgrade 进行系统升级，即更新已安装的包 apt-get autoclean如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。 apt-get clean 类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。 ","date":"2022-06-30","objectID":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:1:0","tags":null,"title":"Ubuntu安装卸载基础知识","uri":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":null,"content":"源码 这种软件包里面都是源程序，没有编译过，经过编译后才能安装。源码安装大致可以分为三步:（./configure）–＞ 编译（sudo make） –＞ 安装（sudo make install） 配置：这是编译源代码的第一步，通过 ./configure 命令完成。执行此步以便为编译源代码作准备。常用的选项有 --prefix=PREFIX，用以指定程序的安装位置。更多的选项可通过 --help 查询。也有某些程序无需执行此步。如果配置了–prefix，如：./configure --prefix=/usr/local/test安装后的所有资源文件都会被放在/usr/local/test目录中，不会分散到其他目录。 编译：一旦配置通过，可即刻使用 make 指令来执行源代码的编译过程。视软件的具体情况而定，编译所需的时间也各有差异，我们所要做的就是耐心等候和静观其变。此步虽然仅下简单的指令，但有时候所遇到的问题却十分复杂。较常碰到的情形是程序编译到中途却无法圆满结束。此时，需要根据出错提示分析以便找到应对之策。 安装：如果编译没有问题，那么执行 sudo make install 就可以将程序安装到系统中了。 当某个安装的软件不再需要时，只须简单的删除该安装目录，就可以把软件卸载干净；移植软件只需拷贝整个目录到另外一个机器即可（相同的操作系统下）当然要卸载程序，也可以在原来的make目录下用一次make uninstall，但前提是Makefile文件有uninstall命令。 如果没有配置--prefix选项，源码包也没有提供make uninstall，则可以通过以下方式可以完整卸载：设置一个临时目录重新安装一遍，如： ./configure --prefix=/tmp/to_remove \u0026\u0026makeinstall然后遍历/tmp/to_remove的文件，删除对应安装位置的文件即可（因为/tmp/to_remove里的目录结构就是没有配置--prefix选项时的目录结构） locate 找到要卸载的软件的安装位置，然后删除所有对应的文件。例如： sudo rm -r /usr/local/include/vtk-8.2 /usr/local/lib/cmake/vtk-8.2/ /usr/local/share/doc/vtk-8.2 ","date":"2022-06-30","objectID":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:2:0","tags":null,"title":"Ubuntu安装卸载基础知识","uri":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":null,"content":"DPKG Ubuntu系统中，软件通常以.deb格式的包文件发布，它是一种预编译软件包。deb包中除了包含已编译的软件，通常还包括软件的拷贝路径、对其他软件包的依赖关系记录、一个比较通用的配置文件以及软件的描述、版本、作者、类别、占用空间等信息。针对dpkg来说，它只能安装一个.deb格式的包，同时会通知你安装这个包需要什么样的依赖，但是不会安装那些依赖文件，同时也对这个包进行配置，因为那些依赖包并没有下载安装。 deb软件包命令遵行如下约定： **soft_ver_rev_arch.deb**soft为软件包名，ver为版本号，rev为Ubuntu修订版本号，arch为目标架构名称 dpkg -i | --install xxx.deb 安装deb安装包 dpkg -r | --remove xxx.deb 删除安装包 dpkg -r -p |--purge xxx.deb 连同配置文件一起删除 dpkg -I | -info xxx.deb 产看软件包信息 dpkg -L xxx.deb 查看文件拷贝信息 dpkg -l 查看系统中以安装软件包信息 dpkg-reconfigure xxx 重新配置软件包 有些时候，使用dpkg安装一个软件包，系统会提示该软件包依赖其他软件包。这时，需要先安装其他软件包，知道满足依赖关系为止。或者同时安装多个软件包，如：dpkg -i aaa.deb bbb.deb ccc.deb 。但是，如果一个软件依赖关系过于复杂，使用\"dpkg\"来安装它，并不是一个明智的选择，这个时候需要用到APT软件包管理系统。APT可以自动的检查依赖关系，通过预设的方法来获得相关软件包，并自动安装配置它。事实上，在多数情况下，我们推荐使用APT软件包管理系统。 ","date":"2022-06-30","objectID":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:3:0","tags":null,"title":"Ubuntu安装卸载基础知识","uri":"/ubuntu%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}]